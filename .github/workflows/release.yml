name: release

on:
  pull_request:
    types: closed # プルリクをクローズしたタイミングだけで動かす
    branches:
      - 'master'

# 参考:https://nvie:com/posts/a-successful-git-branching-model/#finishing-a-release-branch:
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Create tag name
        run: |
          if [ "`echo ${{ github.head_ref }} | grep release`" ]; then
            TAGNAME=$(echo ${{ github.head_ref }} | sed -e "s/release\///g")
          fi

          if [ "`echo ${{ github.head_ref }} | grep hotfix`" ]; then
            TAGNAME=$(echo ${{ github.head_ref }} | sed -e "s/hotfix\///g")
          fi

          echo "TAGNAME = $TAGNAME"
          echo "::set-env name=TAGNAME::$(echo $TAGNAME)"
#      - name: Create tag
#        run: |
#          git tag ${{ github.head_ref }}
#          git push origin --tags
      - name: Create tag
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git checkout origin/master
          git tag "${{ env.TAGNAME }}"
          git push origin "${{ env.TAGNAME }}"
      - name: develop merge
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git fetch origin
          git switch -c origin/develop
          git merge "${{ env.TAGNAME }}"
          git push origin develop
#          git merge --allow-unrelated-histories --no-ff origin/master
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAGNAME }}
          release_name: Release ${{ env.TAGNAME }}
          draft: false
          prerelease: false